DELIMITER $$

-- 1: Impede de realizar cadastro de cliente
Create Trigger trg_impedirCadastro
before insert on cliente
for each row	
begin
    declare v_dia_semana int;
    set v_dia_semana = DAYOFWEEK(SYSDATE());

    -- Domingo = 1, Sábado = 7 (MySQL padrão)
    if v_dia_semana = 1 or v_dia_semana = 7 or v_dia_semana = 3 THEN
        signal sqlstate '45000'
        set message_text = 'Não é possível cadastrar um cliente no sábado, domingo ou terça!';
    end if;
end$$


-- 2: Antes de inserir um novo livro, verifica se o número de páginas é positivo
Create Trigger trg_before_insert_livro
before insert on livro
for each row	
begin
    if new.Num_Paginas <= 0 then
        signal sqlstate '45000' set message_text = 'Número de páginas deve ser maior que zero.';
    end if;
end$$

-- 3: Após inserir um pedido, insere automaticamente uma venda com valor 0.00 (valor inicial)
Create Trigger trg_after_insert_pedido
after insert on pedido
for each row	
begin
    insert into venda (PedidoID, Data_Venda, Valor_Total)
    values (new.PedidoID, new.Data_Pedido, 0.00);
end$$

-- 4: Antes de atualizar o estado de um exemplar, impede mudar para 'Disponível' se estiver emprestado sem devolução
Create Trigger trg_before_update_exemplar
before update on exemplar
for each row	
begin
    if new.Estado = 'Disponível' and old.Estado = 'Emprestado' then
        -- Aqui poderia checar uma tabela de empréstimos (não temos), mas vamos bloquear para exemplo
        signal sqlstate '45000' set message_text = 'Não pode mudar para Disponível sem devolução formal.';
    end if;
end$$

-- 5: Após atualização de pedido para status 'Concluído', atualiza valor total na tabela venda para um valor simulado (exemplo fixo 150)
Create Trigger trg_after_update_pedido_status
after update on pedido
for each row	
begin
    if new.Status = 'Concluído' and old.Status <> 'Concluído' then
        update venda set Valor_Total = 150.00 where PedidoID = new.PedidoID;
    end if;
end$$

-- 6: Após deletar um livro, remove os exemplares relacionados (cascade manual)
Create Trigger trg_after_delete_livro
after delete on livro
for each row	
begin
    delete from exemplar where ISBN = old.ISBN;
end$$

-- 7: Antes de inserir funcionário, garante que o telefone tenha 10 ou 11 dígitos (somente números)
Create Trigger trg_before_insert_funcionario
before insert on funcionario
for each row	
begin
    if length(replace(replace(new.Telefone, '-', ''), ' ', '')) not in (10, 11) then
        signal sqlstate '45000' set message_text = 'Telefone inválido. Deve ter 10 ou 11 dígitos.';
    end if;
end$$

DELIMITER ;



insert into Cliente (ClienteID, Nome, Email, Telefone, Endereco) 
values ('1015', 'Ana Maria de Lima', 'AnaL@gmail.com', '(81) 98876-5458', 'Rua dos Passaros, 223 - Recife, PE');


-- 2: tentar inserir livro com páginas <= 0 (deve falhar)
insert into livro (ISBN, Titulo, Editora, Data_Publicacao, Genero, Num_Paginas, Descricao, AutorID)
values ('0025123685', 'Memorias Postumas de Bras Cubas', 'Editora Saraiva', '2025-06-01', 'Romance', 550, 'Livro de literatura brasileira.', 1);

-- 3: inserir pedido e verificar inserção automática na venda
insert into pedido (PedidoID, ClienteID, Data_Pedido, Status)
values (100, 1001, '2025-06-21', 'Pendente');

select * from venda where PedidoID = 100;

-- 4: tentar atualizar exemplar de 'Emprestado' para 'Disponível' (deve falhar)
update exemplar set Estado = 'Disponível' where SerieID = 'E002';

-- 5: atualizar pedido status para 'Concluído' e verificar valor na venda
update pedido set Status = 'Concluído' where PedidoID = 6;
select * from venda where PedidoID = 6;

-- 6: deletar livro e verificar exemplares apagados
DELETE FROM livro WHERE ISBN = '9788501000034'; -- Deleta 'A Hora da Estrela'
SELECT * FROM exemplar WHERE ISBN = '9788501000034';

-- 7: inserir funcionário com telefone inválido (deve falhar)
INSERT INTO funcionario (FuncionarioID, Nome, Cargo, Telefone, Endereco, DepartamentoID, QtdeLivrosVendidos)
VALUES (1019, 'Carlos Silva', 'Gerente de Dados', '81985360404', 'Rua das arvores', 1, 10);


